{"version":3,"file":"structured-log.js","sources":["../src/polyfills/objectAssign.ts","../src/logEvent.ts","../src/messageTemplate.ts","../src/logger.ts","../src/consoleSink.ts","../src/batchedSink.ts","../src/filterStage.ts","../src/dynamicLevelSwitch.ts","../src/pipeline.ts","../src/sink.ts","../src/enrichStage.ts","../src/loggerConfiguration.ts","../src/index.ts"],"sourcesContent":["interface ObjectConstructor {\r\n  assign(target: any, ...sources: any[]): any;\r\n}\r\n\r\n/**\r\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\r\n */\r\nif (typeof Object.assign != 'function') {\r\n  Object.assign = function (target, varArgs) {\r\n    'use strict';\r\n    if (target == null) {\r\n      throw new TypeError('Cannot convert undefined or null to object');\r\n    }\r\n\r\n    var to = Object(target);\r\n\r\n    for (var index = 1; index < arguments.length; index++) {\r\n      var nextSource = arguments[index];\r\n\r\n      if (nextSource != null) {\r\n        for (var nextKey in nextSource) {\r\n          if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\r\n            to[nextKey] = nextSource[nextKey];\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return to;\r\n  };\r\n}\r\n","import { MessageTemplate } from './messageTemplate';\r\nimport { FilterStage } from './filterStage';\r\n\r\n/**\r\n * Represents the severity level of a log event.\r\n */\r\nexport enum LogEventLevel {\r\n  off =         0,\r\n  fatal =       1 << 0,\r\n  error =       fatal       | 1 << 1,\r\n  warning =     error       | 1 << 2,\r\n  information = warning     | 1 << 3,\r\n  debug =       information | 1 << 4,\r\n  verbose =     debug       | 1 << 5\r\n}\r\n\r\n/**\r\n * Represents an object that can switch between log levels.\r\n */\r\nexport interface LogEventLevelSwitch<T> {\r\n  fatal(): T;\r\n  error(): T;\r\n  warning(): T;\r\n  information(): T;\r\n  debug(): T;\r\n  verbose(): T;\r\n}\r\n\r\n/**\r\n * Checks if a log event level includes the target log event level.\r\n * @param {LogEventLevel} level The level to check.\r\n * @param {LogEventLevel} target The target level.\r\n * @returns True if the checked level contains the target level, or if the checked level is undefined.\r\n */\r\nexport function isEnabled(level: LogEventLevel, target: LogEventLevel): boolean {\r\n  return typeof level === 'undefined' || (level & target) === target;\r\n}\r\n\r\n/**\r\n * Represents a log event.\r\n */\r\nexport class LogEvent {\r\n  /**\r\n   * Creates a new log event instance.\r\n   */\r\n  constructor(timestamp: string, level: LogEventLevel, messageTemplate: MessageTemplate, properties?: Object, error?: Error) {\r\n    this.timestamp = timestamp;\r\n    this.level = level;\r\n    this.messageTemplate = messageTemplate;\r\n    this.properties = properties || {};\r\n    this.error = error || null;\r\n  }\r\n\r\n  /**\r\n   * Gets or sets an ISO 8601-formatted date string for when this event occurred.\r\n   * @example YYYY-MM-DDTHH:mm:ss.sssZ\r\n   */\r\n  timestamp: string;\r\n\r\n  /**\r\n   * Gets or sets the severity level of this event.\r\n   */\r\n  level: LogEventLevel;\r\n\r\n  /**\r\n   * Gets or sets the message template instance of this event.\r\n   */\r\n  messageTemplate: MessageTemplate;\r\n\r\n  /**\r\n   * Gets or sets an object containing the captured properties of this event.\r\n   */\r\n  properties: Object;\r\n\r\n  /**\r\n   * Gets or sets an error associated with this event.\r\n   */\r\n  error: Error;\r\n}\r\n","const tokenizer = /\\{@?\\w+}/g;\r\n\r\ninterface Token {\r\n  name?: string;\r\n  text?: string;\r\n  destructure?: boolean;\r\n  raw?: string;\r\n}\r\n\r\n/**\r\n * Represents a message template that can be rendered into a log message.\r\n */\r\nexport class MessageTemplate {\r\n  /**\r\n   * Gets or sets the raw message template of this instance.\r\n   */\r\n  raw: string;\r\n\r\n  private tokens: Token[];\r\n\r\n  /**\r\n   * Creates a new MessageTemplate instance with the given template.\r\n   */\r\n  constructor(messageTemplate: string) {\r\n    if (messageTemplate === null || !messageTemplate.length) {\r\n      throw new Error('Argument \"messageTemplate\" is required.');\r\n    }\r\n\r\n    this.raw = messageTemplate;\r\n    this.tokens = this.tokenize(messageTemplate);\r\n  }\r\n\r\n  /**\r\n   * Renders this template using the given properties.\r\n   * @param {Object} properties Object containing the properties.\r\n   * @returns Rendered message.\r\n   */\r\n  render(properties?: Object): string {\r\n    if (!this.tokens.length) {\r\n      return this.raw;\r\n    }\r\n    properties = properties || {};\r\n    const result = [];\r\n    for (var i = 0; i < this.tokens.length; ++i) {\r\n      const token = this.tokens[i];\r\n      if (typeof token.name === 'string') {\r\n        if (properties.hasOwnProperty(token.name)) {\r\n          result.push(this.toText(properties[token.name]));\r\n        } else {\r\n          result.push(token.raw);\r\n        }\r\n      } else {\r\n        result.push(token.text);\r\n      }\r\n    }\r\n    return result.join('');\r\n  }\r\n\r\n  /**\r\n   * Binds the given set of args to their matching tokens.\r\n   * @param {any} positionalArgs Arguments.\r\n   * @returns Object containing the properties.\r\n   */\r\n  bindProperties(positionalArgs: any): Object {\r\n    const result = {};\r\n    let nextArg = 0;\r\n    for (var i = 0; i < this.tokens.length && nextArg < positionalArgs.length; ++i) {\r\n      const token = this.tokens[i];\r\n      if (typeof token.name === 'string') {\r\n        let p = positionalArgs[nextArg];\r\n        result[token.name] = this.capture(p, token.destructure);\r\n        nextArg++;\r\n      }\r\n    }\r\n\r\n    while (nextArg < positionalArgs.length) {\r\n      const arg = positionalArgs[nextArg];\r\n      if (typeof arg !== 'undefined') {\r\n        result['a' + nextArg] = this.capture(arg);\r\n      }\r\n      nextArg++;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  private tokenize(template: string): Token[] {\r\n    const tokens = [];\r\n\r\n    let result;\r\n    let textStart;\r\n\r\n    while ((result = tokenizer.exec(template)) !== null) {\r\n      if (result.index !== textStart) {\r\n        tokens.push({ text: template.slice(textStart, result.index) });\r\n      }\r\n\r\n      let destructure = false;\r\n\r\n      let token = result[0].slice(1, -1);\r\n      if (token.indexOf('@') === 0) {\r\n        token = token.slice(1);\r\n        destructure = true;\r\n      }\r\n\r\n      tokens.push({\r\n        name: token,\r\n        destructure,\r\n        raw: result[0]\r\n      });\r\n\r\n      textStart = tokenizer.lastIndex;\r\n    }\r\n\r\n    if (textStart >= 0 && textStart < template.length) {\r\n      tokens.push({ text: template.slice(textStart) });\r\n    }\r\n\r\n    return tokens;\r\n  }\r\n\r\n  private toText(property: any): string {\r\n    if (typeof property === 'undefined') {\r\n      return 'undefined';\r\n    }\r\n\r\n    if (property === null) {\r\n      return 'null';\r\n    }\r\n\r\n    if (typeof property === 'string') {\r\n      return property;\r\n    }\r\n\r\n    if (typeof property === 'number') {\r\n      return property.toString();\r\n    }\r\n\r\n    if (typeof property === 'boolean') {\r\n      return property.toString();\r\n    }\r\n\r\n    if (typeof property.toISOString === 'function') {\r\n      return property.toISOString();\r\n    }\r\n\r\n    if (typeof property === 'object') {\r\n      let s = JSON.stringify(property);\r\n      if (s.length > 70) {\r\n        s = s.slice(0, 67) + '...';\r\n      }\r\n\r\n      return s;\r\n    }\r\n\r\n    return property.toString();\r\n  };\r\n\r\n  private capture(property: any, destructure?: boolean): Object {\r\n    if (typeof property === 'function') {\r\n      return property.toString();\r\n    }\r\n\r\n    if (typeof property === 'object') {\r\n      // null value will be automatically stringified as \"null\", in properties it will be as null\r\n      // otherwise it will throw an error\r\n      if (property === null) {\r\n        return property;\r\n      }\r\n\r\n      // Could use instanceof Date, but this way will be kinder\r\n      // to values passed from other contexts...\r\n      if (destructure || typeof property.toISOString === 'function') {\r\n        return property;\r\n      }\r\n\r\n      return property.toString();\r\n    }\r\n\r\n    return property;\r\n  }\r\n}\r\n","import { LogEventLevel, LogEvent } from './logEvent';\r\nimport { MessageTemplate } from './messageTemplate';\r\nimport { Pipeline } from './pipeline';\r\nimport { Sink } from './sink';\r\n\r\n/**\r\n * Logs events.\r\n */\r\nexport class Logger implements Sink {\r\n  private pipeline: Pipeline;\r\n\r\n  suppressErrors: boolean = true;\r\n\r\n  /**\r\n   * Creates a new logger instance using the specified pipeline.\r\n   */\r\n  constructor(pipeline: Pipeline, suppressErrors?: boolean) {\r\n    this.pipeline = pipeline;\r\n    this.suppressErrors = typeof suppressErrors === 'undefined' || suppressErrors;\r\n  }\r\n\r\n  /**\r\n   * Logs an event with the {LogEventLevel.fatal} severity.\r\n   * @param {string} messageTemplate Message template for the log event.\r\n   * @param {any[]} properties Properties that can be used to render the message template.\r\n   */\r\n  fatal(messageTemplate: string, ...properties: any[]);\r\n\r\n  /**\r\n   * Logs an event with the {LogEventLevel.fatal} severity.\r\n   * @param {Error} error Error for the log event.\r\n   * @param {string} messageTemplate Message template for the log event.\r\n   * @param {any[]} properties Properties that can be used to render the message template.\r\n   */\r\n  fatal(error: Error, messageTemplate: string, ...properties: any[]);\r\n\r\n  fatal(errorOrMessageTemplate: Error | string, ...properties: any[]) {\r\n    try {\r\n      if (errorOrMessageTemplate instanceof Error) {\r\n        this.write(LogEventLevel.fatal, properties[0], properties.slice(1), errorOrMessageTemplate);\r\n      } else {\r\n        this.write(LogEventLevel.fatal, errorOrMessageTemplate, properties);\r\n      }\r\n    } catch (error) {\r\n      if (!this.suppressErrors) {\r\n        throw error;\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Logs an event with the {LogEventLevel.error} severity.\r\n   * @param {string} messageTemplate Message template for the log event.\r\n   * @param {any[]} properties Properties that can be used to render the message template.\r\n   */\r\n  error(messageTemplate: string, ...properties: any[]);\r\n\r\n  /**\r\n   * Logs an event with the {LogEventLevel.error} severity.\r\n   * @param {Error} error Error for the log event.\r\n   * @param {string} messageTemplate Message template for the log event.\r\n   * @param {any[]} properties Properties that can be used to render the message template.\r\n   */\r\n  error(error: Error, messageTemplate: string, ...properties: any[]);\r\n\r\n  error(errorOrMessageTemplate: Error | string, ...properties: any[]) {\r\n    try {\r\n      if (errorOrMessageTemplate instanceof Error) {\r\n        this.write(LogEventLevel.error, properties[0], properties.slice(1), errorOrMessageTemplate);\r\n      } else {\r\n        this.write(LogEventLevel.error, errorOrMessageTemplate, properties);\r\n      }\r\n    } catch (error) {\r\n      if (!this.suppressErrors) {\r\n        throw error;\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Logs an event with the {LogEventLevel.warning} severity.\r\n   * @param {string} messageTemplate Message template for the log event.\r\n   * @param {any[]} properties Properties that can be used to render the message template.\r\n   */\r\n  warn(messageTemplate: string, ...properties: any[]);\r\n\r\n  /**\r\n   * Logs an event with the {LogEventLevel.warning} severity.\r\n   * @param {Error} error Error for the log event.\r\n   * @param {string} messageTemplate Message template for the log event.\r\n   * @param {any[]} properties Properties that can be used to render the message template.\r\n   */\r\n  warn(error: Error, messageTemplate: string, ...properties: any[]);\r\n\r\n  warn(errorOrMessageTemplate: Error | string, ...properties: any[]) {\r\n    try {\r\n      if (errorOrMessageTemplate instanceof Error) {\r\n        this.write(LogEventLevel.warning, properties[0], properties.slice(1), errorOrMessageTemplate);\r\n      } else {\r\n        this.write(LogEventLevel.warning, errorOrMessageTemplate, properties);\r\n      }\r\n    } catch (error) {\r\n      if (!this.suppressErrors) {\r\n        throw error;\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Logs an event with the {LogEventLevel.information} severity.\r\n   * @param {string} messageTemplate Message template for the log event.\r\n   * @param {any[]} properties Properties that can be used to render the message template.\r\n   */\r\n  info(messageTemplate: string, ...properties: any[]);\r\n\r\n  /**\r\n   * Logs an event with the {LogEventLevel.information} severity.\r\n   * @param {Error} error Error for the log event.\r\n   * @param {string} messageTemplate Message template for the log event.\r\n   * @param {any[]} properties Properties that can be used to render the message template.\r\n   */\r\n  info(error: Error, messageTemplate: string, ...properties: any[]);\r\n\r\n  info(errorOrMessageTemplate: Error | string, ...properties: any[]) {\r\n    try {\r\n      if (errorOrMessageTemplate instanceof Error) {\r\n        this.write(LogEventLevel.information, properties[0], properties.slice(1), errorOrMessageTemplate);\r\n      } else {\r\n        this.write(LogEventLevel.information, errorOrMessageTemplate, properties);\r\n      }\r\n    } catch (error) {\r\n      if (!this.suppressErrors) {\r\n        throw error;\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Logs an event with the {LogEventLevel.debug} severity.\r\n   * @param {string} messageTemplate Message template for the log event.\r\n   * @param {any[]} properties Properties that can be used to render the message template.\r\n   */\r\n  debug(messageTemplate: string, ...properties: any[]);\r\n\r\n  /**\r\n   * Logs an event with the {LogEventLevel.debug} severity.\r\n   * @param {Error} error Error for the log event.\r\n   * @param {string} messageTemplate Message template for the log event.\r\n   * @param {any[]} properties Properties that can be used to render the message template.\r\n   */\r\n  debug(error: Error, messageTemplate: string, ...properties: any[]);\r\n\r\n  debug(errorOrMessageTemplate: Error | string, ...properties: any[]) {\r\n    try {\r\n      if (errorOrMessageTemplate instanceof Error) {\r\n        this.write(LogEventLevel.debug, properties[0], properties.slice(1), errorOrMessageTemplate);\r\n      } else {\r\n        this.write(LogEventLevel.debug, errorOrMessageTemplate, properties);\r\n      }\r\n    } catch (error) {\r\n      if (!this.suppressErrors) {\r\n        throw error;\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Logs an event with the {LogEventLevel.verbose} severity.\r\n   * @param {string} messageTemplate Message template for the log event.\r\n   * @param {any[]} properties Properties that can be used to render the message template.\r\n   */\r\n  verbose(messageTemplate: string, ...properties: any[]);\r\n\r\n  /**\r\n   * Logs an event with the {LogEventLevel.verbose} severity.\r\n   * @param {Error} error Error for the log event.\r\n   * @param {string} messageTemplate Message template for the log event.\r\n   * @param {any[]} properties Properties that can be used to render the message template.\r\n   */\r\n  verbose(error: Error, messageTemplate: string, ...properties: any[]);\r\n\r\n  verbose(errorOrMessageTemplate: Error | string, ...properties: any[]) {\r\n    try {\r\n      if (errorOrMessageTemplate instanceof Error) {\r\n        this.write(LogEventLevel.verbose, properties[0], properties.slice(1), errorOrMessageTemplate);\r\n      } else {\r\n        this.write(LogEventLevel.verbose, errorOrMessageTemplate, properties);\r\n      }\r\n    } catch (error) {\r\n      if (!this.suppressErrors) {\r\n        throw error;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Flushes the pipeline of this logger.\r\n   * @returns A {Promise<any>} that will resolve when the pipeline has been flushed.\r\n   */\r\n  flush(): Promise<any> {\r\n    return this.suppressErrors\r\n      ? this.pipeline.flush().catch(() => {})\r\n      : this.pipeline.flush();\r\n  }\r\n\r\n  /**\r\n   * Emits events through this logger's pipeline.\r\n   */\r\n  emit(events: LogEvent[]): LogEvent[] {\r\n    try {\r\n      this.pipeline.emit(events);\r\n      return events;\r\n    } catch (error) {\r\n      if (!this.suppressErrors) {\r\n        throw error;\r\n      }\r\n    }\r\n  }\r\n\r\n  private write(level: LogEventLevel, rawMessageTemplate: string, unboundProperties: any[], error?: Error) {\r\n    const messageTemplate = new MessageTemplate(rawMessageTemplate);\r\n    const properties = messageTemplate.bindProperties(unboundProperties);\r\n    const logEvent = new LogEvent(\r\n      new Date().toISOString(),\r\n      level,\r\n      messageTemplate,\r\n      properties,\r\n      error\r\n    );\r\n    this.pipeline.emit([logEvent]);\r\n  }\r\n}\r\n","import { LogEventLevel, LogEvent, isEnabled } from './logEvent';\r\nimport { Sink } from './sink';\r\nimport { MessageTemplate } from './messageTemplate';\r\n\r\nexport interface ConsoleProxy {\r\n  error(message?: any, ...properties: any[]);\r\n  warn(message?: any, ...properties: any[]);\r\n  info(message?: any, ...properties: any[]);\r\n  debug(message?: any, ...properties: any[]);\r\n  log(message?: any, ...properties: any[]);\r\n}\r\n\r\nexport interface ConsoleSinkOptions {\r\n  console?: any;\r\n  includeTimestamps?: boolean;\r\n  includeProperties?: boolean;\r\n  restrictedToMinimumLevel?: LogEventLevel;\r\n}\r\n\r\nexport class ConsoleSink implements Sink {\r\n  private options: ConsoleSinkOptions;\r\n  private console: ConsoleProxy;\r\n\r\n  constructor(options?: ConsoleSinkOptions) {\r\n    this.options = options || {};\r\n    const internalConsole = this.options.console || typeof console !== 'undefined' && console || null;\r\n    const stub = function () { };\r\n\r\n    // console.debug is no-op for Node, so use console.log instead.\r\n    const nodeConsole = !this.options.console && typeof process !== 'undefined' && process.versions.node;\r\n\r\n    this.console = {\r\n      error: (internalConsole && (internalConsole.error || internalConsole.log)) || stub,\r\n      warn:  (internalConsole && (internalConsole.warn || internalConsole.log)) || stub,\r\n      info:  (internalConsole && (internalConsole.info || internalConsole.log)) || stub,\r\n      debug: (internalConsole && ((!nodeConsole && internalConsole.debug) || internalConsole.log)) || stub,\r\n      log:   (internalConsole && internalConsole.log) || stub\r\n    };\r\n  }\r\n\r\n  public emit(events: LogEvent[]) {\r\n    for (let i = 0; i < events.length; ++i) {\r\n      const e = events[i];\r\n      if (!isEnabled(this.options.restrictedToMinimumLevel, e.level))\r\n        continue;\r\n\r\n      switch (e.level) {\r\n        case LogEventLevel.fatal:\r\n          this.writeToConsole(this.console.error, 'Fatal', e);\r\n          break;\r\n\r\n        case LogEventLevel.error:\r\n          this.writeToConsole(this.console.error, 'Error', e);\r\n          break;\r\n\r\n        case LogEventLevel.warning:\r\n          this.writeToConsole(this.console.warn, 'Warning', e);\r\n          break;\r\n\r\n        case LogEventLevel.information:\r\n          this.writeToConsole(this.console.info, 'Information', e);\r\n          break;\r\n          \r\n        case LogEventLevel.debug:\r\n          this.writeToConsole(this.console.debug, 'Debug', e);\r\n          break;\r\n          \r\n        case LogEventLevel.verbose:\r\n          this.writeToConsole(this.console.debug, 'Verbose', e);\r\n          break;\r\n\r\n        default: \r\n          this.writeToConsole(this.console.log, 'Log', e);\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  public flush() {\r\n    return Promise.resolve();\r\n  }\r\n\r\n  private writeToConsole(logMethod: Function, prefix: string, e: LogEvent) {\r\n    let output = `[${prefix}] ${e.messageTemplate.render(e.properties)}`;\r\n    if (this.options.includeTimestamps) {\r\n      output = `${e.timestamp} ${output}`;\r\n    }\r\n    const values = [];\r\n    if (this.options.includeProperties) {\r\n      for (const key in e.properties) {\r\n        if (e.properties.hasOwnProperty(key)) {\r\n          values.push(e.properties[key]);\r\n        }\r\n      }\r\n    }\r\n    if (e.error instanceof Error) {\r\n      values.push('\\n', e.error);\r\n    }\r\n    logMethod(output, ...values);\r\n  }\r\n}\r\n","import { LogEventLevel, LogEvent, isEnabled } from './logEvent';\r\nimport { Sink } from './sink';\r\nimport { MessageTemplate } from './messageTemplate';\r\n\r\nexport interface BatchedSinkOptions {\r\n  /**\r\n   * Maximum number of events to be sent in a single batch.\r\n   */\r\n  maxSize?: number;\r\n\r\n  /**\r\n   * Number of seconds to wait between checking for batches.\r\n   */\r\n  period?: number;\r\n\r\n  /**\r\n   * {Storage} instance to be used for durable storage of log events.\r\n   */\r\n  durableStore?: Storage;\r\n}\r\n\r\nexport const defaultBatchedSinkOptions: BatchedSinkOptions = {\r\n  maxSize: 100,\r\n  period: 5,\r\n  durableStore: null\r\n};\r\n\r\nexport class BatchedSink implements Sink {\r\n  protected durableStorageKey: string = 'structured-log-batched-sink-durable-cache';\r\n\r\n  protected options: BatchedSinkOptions;\r\n  protected innerSink: Sink;\r\n  protected batchedEvents: LogEvent[];\r\n  private batchTimeout;\r\n  private batchKey;\r\n\r\n  constructor(innerSink?: Sink, options?: BatchedSinkOptions) {\r\n    this.innerSink = innerSink || null;\r\n    this.options = {\r\n      ...defaultBatchedSinkOptions,\r\n      ...(options || {})\r\n    };\r\n    this.batchedEvents = [];\r\n    this.cycleBatch();\r\n    if (this.options.durableStore) {\r\n      let initialBatch = [];\r\n      for (const key in this.options.durableStore) {\r\n        if (key.indexOf(this.durableStorageKey) === 0) {\r\n          const storedEvents = JSON.parse(this.options.durableStore.getItem(key))\r\n            .map(e => {\r\n              e.messageTemplate = new MessageTemplate(e.messageTemplate.raw);\r\n              return e;\r\n            });\r\n          initialBatch = initialBatch.concat(storedEvents);\r\n          this.options.durableStore.removeItem(key);\r\n        }\r\n      }\r\n      this.emit(initialBatch);\r\n    }\r\n  }\r\n\r\n  emit(events: LogEvent[]) {\r\n    if (this.batchedEvents.length + events.length <= this.options.maxSize) {\r\n      this.batchedEvents.push(...events);\r\n      this.storeEvents();\r\n    } else {\r\n      let cursor = this.options.maxSize - this.batchedEvents.length;\r\n      this.batchedEvents.push(...events.slice(0, cursor));\r\n      this.storeEvents();\r\n      while (cursor < events.length) {\r\n        this.cycleBatch();\r\n        this.batchedEvents.push(...events.slice(cursor, cursor = cursor + this.options.maxSize));\r\n        this.storeEvents();\r\n      }\r\n    }\r\n\r\n    return events;\r\n  }\r\n\r\n  flush(): Promise<any> {\r\n    this.cycleBatch();\r\n    const corePromise = this.flushCore();\r\n    return corePromise instanceof Promise ? corePromise : Promise.resolve();\r\n  }\r\n\r\n  protected emitCore(events: LogEvent[]): any {\r\n    return this.innerSink.emit(events);\r\n  }\r\n\r\n  protected flushCore(): Promise<any> {\r\n    return this.innerSink.flush();\r\n  }\r\n\r\n  protected cycleBatch() {\r\n    clearTimeout(this.batchTimeout);\r\n    if (this.batchedEvents.length) {\r\n      const emitPromise = this.emitCore(this.batchedEvents.slice(0));\r\n      if (this.options.durableStore) {\r\n        const previousBatchKey = this.batchKey;\r\n        (emitPromise instanceof Promise ? emitPromise : Promise.resolve())\r\n          .then(() => this.options.durableStore.removeItem(previousBatchKey));\r\n      }\r\n      this.batchedEvents.length = 0;\r\n    }\r\n    this.batchKey = `${this.durableStorageKey}-${new Date().getTime()}`;\r\n    if (!isNaN(this.options.period) && this.options.period > 0) {\r\n      this.batchTimeout = setTimeout(() => this.cycleBatch(), this.options.period * 1000);\r\n    }\r\n  }\r\n\r\n  private storeEvents() {\r\n    if (this.options.durableStore) {\r\n      this.options.durableStore.setItem(this.batchKey, JSON.stringify(this.batchedEvents));\r\n    }\r\n  }\r\n}\r\n","import { PipelineStage } from './pipeline';\r\nimport { LogEvent } from './logEvent';\r\n\r\nexport class FilterStage implements PipelineStage {\r\n  private predicate: (e: LogEvent) => boolean;\r\n\r\n  constructor(predicate: (e: LogEvent) => boolean) {\r\n    this.predicate = predicate;\r\n  }\r\n\r\n  emit(events: LogEvent[]): LogEvent[] {\r\n    return events.filter(this.predicate);\r\n  }\r\n\r\n  flush(): Promise<any> {\r\n    return Promise.resolve();\r\n  }\r\n}\r\n","import { LogEventLevel, LogEventLevelSwitch, isEnabled } from './logEvent';\r\nimport { FilterStage } from './filterStage';\r\n\r\n/**\r\n * Allows dynamic control of the logging level.\r\n */\r\nexport class DynamicLevelSwitch implements LogEventLevelSwitch<Promise<any>> {\r\n  private minLevel: LogEventLevel = null;\r\n\r\n  /**\r\n   * Gets or sets a delegate that can be called when the pipeline needs to be flushed.\r\n   * This should generally not be modified, as it will be provided by the pipeline stage.\r\n   */\r\n  flushDelegate: () => Promise<any> = () => Promise.resolve();\r\n\r\n  fatal() {\r\n    return this.flushDelegate().then(() => this.minLevel = LogEventLevel.fatal);\r\n  }\r\n\r\n  error() {\r\n    return this.flushDelegate().then(() => this.minLevel = LogEventLevel.error);\r\n  }\r\n\r\n  warning() {\r\n    return this.flushDelegate().then(() => this.minLevel = LogEventLevel.warning);\r\n  }\r\n\r\n  information() {\r\n    return this.flushDelegate().then(() => this.minLevel = LogEventLevel.information);\r\n  }\r\n\r\n  debug() {\r\n    return this.flushDelegate().then(() => this.minLevel = LogEventLevel.debug);\r\n  }\r\n\r\n  verbose() {\r\n    return this.flushDelegate().then(() => this.minLevel = LogEventLevel.verbose);\r\n  }\r\n\r\n  off() {\r\n    return this.flushDelegate().then(() => this.minLevel = LogEventLevel.off);\r\n  }\r\n\r\n  isEnabled(level: LogEventLevel) {\r\n    return this.minLevel === null || isEnabled(this.minLevel, level);\r\n  }\r\n}\r\n\r\nexport class DynamicLevelSwitchStage extends FilterStage {\r\n  private dynamicLevelSwitch: DynamicLevelSwitch;\r\n\r\n  /**\r\n   * Sets a delegate that can be called when the pipeline needs to be flushed.\r\n   */\r\n  setFlushDelegate(flushDelegate: () => Promise<any>) {\r\n    this.dynamicLevelSwitch.flushDelegate = flushDelegate;\r\n  }\r\n\r\n  constructor(dynamicLevelSwitch: DynamicLevelSwitch) {\r\n    super(e => dynamicLevelSwitch.isEnabled(e.level));\r\n    this.dynamicLevelSwitch = dynamicLevelSwitch;\r\n  }\r\n}\r\n","import { LogEvent } from './logEvent';\r\n\r\nexport interface PipelineStage {\r\n  emit(events: LogEvent[]): LogEvent[];\r\n  flush(): Promise<any>;\r\n}\r\n\r\nexport class Pipeline {\r\n  private stages: PipelineStage[];\r\n  private eventQueue: LogEvent[];\r\n  private flushInProgress: boolean;\r\n  private flushPromise: Promise<any>;\r\n\r\n  constructor() {\r\n    this.stages = [];\r\n    this.eventQueue = [];\r\n    this.flushInProgress = false;\r\n  }\r\n\r\n  /**\r\n   * Adds a stage to the end of the pipeline.\r\n   * @param {PipelineStage} stage The pipeline stage to add.\r\n   */\r\n  addStage(stage: PipelineStage) {\r\n    this.stages.push(stage);\r\n  }\r\n\r\n  /**\r\n   * Emits events through the pipeline. If a flush is currently in progress, the events will be queued and will been\r\n   * sent through the pipeline once the flush is complete.\r\n   * @param {LogEvent[]} events The events to emit.\r\n   */\r\n  emit(events: LogEvent[]): Promise<any> {\r\n    if (this.flushInProgress) {\r\n      this.eventQueue = this.eventQueue.concat(events);\r\n      return this.flushPromise;\r\n    } else {\r\n      if (!this.stages.length || !events.length) {\r\n        return Promise.resolve();\r\n      }\r\n\r\n      let promise = Promise.resolve(this.stages[0].emit(events));\r\n      for (let i = 1; i < this.stages.length; ++i) {\r\n        promise = promise.then(events => this.stages[i].emit(events));\r\n      }\r\n\r\n      return promise;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Flushes events through the pipeline.\r\n   * @returns A {Promise<any>} that resolves when all events have been flushed and the pipeline can accept new events.\r\n   */\r\n  flush(): Promise<any> {\r\n    if (this.flushInProgress) {\r\n      return this.flushPromise;\r\n    }\r\n\r\n    this.flushInProgress = true;\r\n    return this.flushPromise = Promise.resolve()\r\n      .then(() => {\r\n        if (this.stages.length === 0) {\r\n          return;\r\n        }\r\n\r\n        let promise = this.stages[0].flush();\r\n        for (let i = 1; i < this.stages.length; ++i) {\r\n          promise = promise.then(() => this.stages[i].flush());\r\n        }\r\n        return promise;\r\n      })\r\n      .then(() => {\r\n        this.flushInProgress = false;\r\n        const queuedEvents = this.eventQueue.slice();\r\n        this.eventQueue = [];\r\n        return this.emit(queuedEvents);\r\n      });\r\n  }\r\n}\r\n","import { LogEvent } from './logEvent';\r\nimport { PipelineStage } from './pipeline';\r\n\r\nexport interface Sink {\r\n  emit(events: LogEvent[]);\r\n  flush(): Promise<any>;\r\n}\r\n\r\nexport class SinkStage implements PipelineStage {\r\n  private sink: Sink;\r\n\r\n  constructor(sink: Sink) {\r\n    this.sink = sink;\r\n  }\r\n\r\n  emit(events: LogEvent[]) {\r\n    this.sink.emit(events);\r\n    return events;\r\n  }\r\n\r\n  flush() {\r\n    return this.sink.flush();\r\n  }\r\n}\r\n","import { PipelineStage } from './pipeline';\r\nimport { LogEvent } from './logEvent';\r\n\r\nconst deepClone = (obj: any) => JSON.parse(JSON.stringify(obj));\r\n\r\nexport type ObjectFactory = (properties?: Object) => Object;\r\n\r\nexport class EnrichStage implements PipelineStage {\r\n  private enricher: Object | ObjectFactory;\r\n\r\n  constructor(enricher: Object | ObjectFactory) {\r\n    this.enricher = enricher;\r\n  }\r\n\r\n  emit(events: LogEvent[]): LogEvent[] {\r\n    for (let i = 0; i < events.length; ++i) {\r\n      const extraProperties = this.enricher instanceof Function\r\n        ? this.enricher(deepClone(events[i].properties))\r\n        : this.enricher;\r\n      Object.assign(events[i].properties, extraProperties);\r\n    }\r\n    return events;\r\n  }\r\n\r\n  flush(): Promise<any> {\r\n    return Promise.resolve();\r\n  }\r\n}\r\n","import { Pipeline } from './pipeline';\r\nimport { Logger } from './logger';\r\nimport { LogEvent, LogEventLevel, isEnabled, LogEventLevelSwitch } from './logEvent';\r\nimport { DynamicLevelSwitch, DynamicLevelSwitchStage } from './dynamicLevelSwitch';\r\nimport { FilterStage } from './filterStage';\r\nimport { Sink, SinkStage } from './sink';\r\nimport { EnrichStage, ObjectFactory } from './enrichStage';\r\n\r\ninterface MinLevel extends LogEventLevelSwitch<LoggerConfiguration> {\r\n  (levelOrSwitch: LogEventLevel | string | number | DynamicLevelSwitch): LoggerConfiguration;\r\n}\r\n\r\n/**\r\n * Configures pipelines for new logger instances.\r\n */\r\nexport class LoggerConfiguration {\r\n  private pipeline: Pipeline;\r\n  private _suppressErrors: boolean;\r\n\r\n  constructor() {\r\n    this.pipeline = new Pipeline();\r\n    this._suppressErrors = true;\r\n  }\r\n\r\n  /**\r\n   * Adds a sink to the pipeline.\r\n   * @param {Sink} sink The sink to add.\r\n   */\r\n  writeTo(sink: Sink): LoggerConfiguration {\r\n    this.pipeline.addStage(new SinkStage(sink));\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Sets the minimum level for any subsequent stages in the pipeline.\r\n   */\r\n  minLevel: MinLevel = Object.assign((levelOrSwitch: LogEventLevel | string | number | DynamicLevelSwitch): LoggerConfiguration => {\r\n    if (typeof levelOrSwitch === 'undefined' || levelOrSwitch === null) {\r\n      throw new TypeError('Argument \"levelOrSwitch\" is not a valid LogEventLevel value or DynamicLevelSwitch instance.');\r\n    } else if (levelOrSwitch instanceof DynamicLevelSwitch) {\r\n      const switchStage = new DynamicLevelSwitchStage(levelOrSwitch);\r\n      const flush = this.pipeline.flush;\r\n      switchStage.setFlushDelegate(() => this.pipeline.flush());\r\n      this.pipeline.addStage(switchStage);\r\n      return this;\r\n    } else if (typeof levelOrSwitch === 'string') {\r\n      const level = <LogEventLevel>LogEventLevel[levelOrSwitch.toLowerCase()];\r\n      if (typeof level === 'undefined' || level === null) {\r\n        throw new TypeError('Argument \"levelOrSwitch\" is not a valid LogEventLevel value.');\r\n      }\r\n      return this.filter(e => isEnabled(level, e.level));\r\n    } else {\r\n      return this.filter(e => isEnabled(levelOrSwitch, e.level));\r\n    }\r\n  }, {\r\n    fatal: () =>        this.minLevel(LogEventLevel.fatal),\r\n    error: () =>        this.minLevel(LogEventLevel.error),\r\n    warning: () =>      this.minLevel(LogEventLevel.warning),\r\n    information: () =>  this.minLevel(LogEventLevel.information),\r\n    debug: () =>        this.minLevel(LogEventLevel.debug),\r\n    verbose: () =>      this.minLevel(LogEventLevel.verbose)\r\n  });\r\n\r\n  /**\r\n   * Adds a filter to the pipeline.\r\n   * @param {(e: LogEvent) => boolean} predicate Filter predicate to use.\r\n   */\r\n  filter(predicate: (e: LogEvent) => boolean): LoggerConfiguration {\r\n    if (predicate instanceof Function) {\r\n      this.pipeline.addStage(new FilterStage(predicate));\r\n    } else {\r\n      throw new TypeError('Argument \"predicate\" must be a function.');\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Adds an enricher to the pipeline.\r\n   */\r\n  enrich(enricher: Object | ObjectFactory): LoggerConfiguration {\r\n    if (enricher instanceof Function || enricher instanceof Object) {\r\n      this.pipeline.addStage(new EnrichStage(enricher));\r\n    } else {\r\n      throw new TypeError('Argument \"enricher\" must be either a function or an object.');\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Enable or disable error suppression.\r\n   */\r\n  suppressErrors(suppress?: boolean): LoggerConfiguration {\r\n    this._suppressErrors = typeof suppress === 'undefined' || !!suppress;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Creates a new logger instance based on this configuration.\r\n   */\r\n  create(): Logger {\r\n    return new Logger(this.pipeline, this._suppressErrors);\r\n  }\r\n}\r\n","import './polyfills/objectAssign';\r\n\r\nexport { LogEventLevel } from './logEvent';\r\nexport { Logger } from './logger';\r\nexport { ConsoleSink } from './consoleSink';\r\nexport { BatchedSink } from './batchedSink';\r\nexport { DynamicLevelSwitch } from './dynamicLevelSwitch';\r\n\r\nimport { LoggerConfiguration } from './loggerConfiguration';\r\n\r\nexport function configure() {\r\n  return new LoggerConfiguration();\r\n}\r\n\r\nexport { LoggerConfiguration };\r\n"],"names":["LogEventLevel"],"mappings":"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"}